/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-04-08 05:46:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ajax;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajax1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../resources/js/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() { //body태그 안부터 ram에 읽어들여라!!=> DOM Tree\r\n");
      out.write("\t$('#b1').click(function() {\r\n");
      out.write("\t\talert('b1버튼을 클릭함.!!!')\r\n");
      out.write("\t\t//location.href=\"http://www.naver.com\"\r\n");
      out.write("\t\t//순서대로 naver페이지를 호출하는 대표적인 방법\r\n");
      out.write("\t\t//$.ajax() 원할때 아무때나 특정한 페이지를 호출하는 방법\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"../test.jsp\" + apple,\r\n");
      out.write("\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\talert('test page연결 성공.!!!!')\r\n");
      out.write("\t\t\t\talert('test.jsp의 결과는 ' + result)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function() {\r\n");
      out.write("\t\t\t\talert('test page연결 실패.!!!!')\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t})\r\n");
      out.write("\t}) //b1\r\n");
      out.write("\t$('#b12').click(function() {\r\n");
      out.write("\t\talert('b12버튼을 클릭함.!!!')\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"../monday.jsp\",\r\n");
      out.write("\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\talert('monday.jsp의 결과는 ' + result)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function() {\r\n");
      out.write("\t\t\t\talert('monday page연결 실패.!!!!')\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t})\r\n");
      out.write("\t}) //b12\r\n");
      out.write("\t$('#b13').click(function() {\r\n");
      out.write("\t\talert('b13버튼을 클릭함.!!!')\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"../sunday\", //spring에서는 controller의 주소를 넣어준다.\r\n");
      out.write("\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\talert('sunday.jsp의 결과는 ' + result)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function() {\r\n");
      out.write("\t\t\t\talert('sunday page연결 실패.!!!!')\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t})\r\n");
      out.write("\t}) //b12\r\n");
      out.write("}) //start\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<button id=\"b1\">ajax테스트해보자.</button><br>\r\n");
      out.write("\t<button id=\"b12\">monday.jsp를 ajax로 호출해서 \"월요일이다.\"를 받아와보자.</button><br>\r\n");
      out.write("\t<button id=\"b13\">views아래에 있는 sunday.jsp를 ajax로 호출!!</button><br>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
